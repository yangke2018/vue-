参考资料：
https://blog.csdn.net/weixin_41639609/article/details/88721627

1、vue-router如何响应 路由参数 的变化？
    复用组件时，想对路由参数的变化作出响应的话， 可以watch (监测变化) $route 对象
    const User = {
    template: '...',
    watch: {
      '$route' (to, from) {
        // 对路由变化作出响应...
      }
    }
    }
    或者使用 2.2 中引入的 beforeRouteUpdate 守卫：
    const User = {
    template: '...',
    beforeRouteUpdate (to, from, next) {
      // react to route changes...
      // don't forget to call next()
    }
    }
 
 2、完整的 vue-router 导航解析流程
    1）导航被触发。

    2）在失活的组件里调用离开守卫。

    3）调用全局的 beforeEach守卫。

    4）在重用的组件里调用 beforeRouteUpdate守卫 (2.2+)。

    5）在路由配置里调用beforeEnter。

    6）解析异步路由组件。

    7）在被激活的组件里调用beforeRouteEnter。

    8）调用全局的 beforeResole 守卫 (2.5+)。

    9）导航被确认。

    10）调用全局的afterEach 钩子。

    11）触发 DOM 更新。

    12）用创建好的实例调用beforeRouteEnter 守卫中传给 next 的回调函数。
    
3、vue-router有哪几种导航钩子（ 导航守卫 ）？ 
    1)全局守卫： router.beforeEach

    2)全局解析守卫： router.beforeResolve

    3)全局后置钩子： router.afterEach

    4)路由独享的守卫： beforeEnter

    5)组件内的守卫： beforeRouteEnter、beforeRouteUpdate (2.2 新增)、beforeRouteLeave
  
